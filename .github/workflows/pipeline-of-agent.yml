name: pipeline of agent

on: [push]

jobs:
  
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Setup environment"
        uses: actions/setup-python@v2
        with:
          python-version: '3.5.4'
      - name: "Checking out code"
        uses: actions/checkout@v2
      - name: "Testing code"
        run: |
          make deps
          make test
        
  code_audit:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: "Setup environment"
        uses: actions/setup-python@v2
        with:
          python-version: '3.5.4'
      - name: "Checking out code"
        uses: actions/checkout@v2
      - name: "Scaning code"
        run: |
          make deps
          # make code-quality
          
  build:
    needs: [test, code_audit]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: agent
    steps:
      - name: "Checking out code"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:master
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "Building docker images"
        run: |
          sudo pip3 install yq
          cp -v .env.example .env
          docker-compose -f docker-compose.yml config \
              | yq -r '.services | .[] | select(.build != null) | [.build.dockerfile, .image, .build.context] | @tsv' \
              | while IFS=$'\t' read -r dockerfile image context
              do
                  docker buildx build \
                      --output "type=image,push=true" \
                      --file "${context}/${dockerfile}" \
                      --tag "${image}" \
                      --platform "linux/amd64" \
                      "${context}"
              done          
            
